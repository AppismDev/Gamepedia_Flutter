///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class GameModel {
  int? id;
  double? aggregatedRating;
  List<int?>? artworks;
  int? category;
  int? collection;
  int? cover;
  int? createdAt;
  int? firstReleaseDate;
  int? follows;
  List<int?>? gameEngines;
  List<int?>? gameModes;
  List<int?>? genres;
  List<int?>? involvedCompanies;
  String? name;
  List<int?>? platforms;
  List<int?>? playerPerspectives;
  double? rating;
  int? ratingCount;
  List<int?>? releaseDates;
  List<int?>? screenshots;
  List<int?>? similarGames;
  String? slug;
  String? storyline;
  String? summary;
  double? totalRating;
  int? totalRatingCount;
  String? url;
  List<int?>? videos;
  List<int?>? websites;
  String? checksum;

  GameModel({
    this.id,
    this.aggregatedRating,
    this.artworks,
    this.category,
    this.collection,
    this.cover,
    this.createdAt,
    this.firstReleaseDate,
    this.follows,
    this.gameEngines,
    this.gameModes,
    this.genres,
    this.involvedCompanies,
    this.name,
    this.platforms,
    this.playerPerspectives,
    this.rating,
    this.ratingCount,
    this.releaseDates,
    this.screenshots,
    this.similarGames,
    this.slug,
    this.storyline,
    this.summary,
    this.totalRating,
    this.totalRatingCount,
    this.url,
    this.videos,
    this.websites,
    this.checksum,
  });
  GameModel.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    aggregatedRating = json['aggregated_rating']?.toDouble();
    if (json['artworks'] != null) {
      final v = json['artworks'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      artworks = arr0;
    }
    category = json['category']?.toInt();
    collection = json['collection']?.toInt();
    cover = json['cover']?.toInt();
    createdAt = json['created_at']?.toInt();
    firstReleaseDate = json['first_release_date']?.toInt();
    follows = json['follows']?.toInt();
    if (json['game_engines'] != null) {
      final v = json['game_engines'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      gameEngines = arr0;
    }
    if (json['game_modes'] != null) {
      final v = json['game_modes'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      gameModes = arr0;
    }
    if (json['genres'] != null) {
      final v = json['genres'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      genres = arr0;
    }
    if (json['involved_companies'] != null) {
      final v = json['involved_companies'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      involvedCompanies = arr0;
    }
    name = json['name']?.toString();
    if (json['platforms'] != null) {
      final v = json['platforms'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      platforms = arr0;
    }
    if (json['player_perspectives'] != null) {
      final v = json['player_perspectives'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      playerPerspectives = arr0;
    }
    rating = json['rating']?.toDouble();
    ratingCount = json['rating_count']?.toInt();
    if (json['release_dates'] != null) {
      final v = json['release_dates'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      releaseDates = arr0;
    }
    if (json['screenshots'] != null) {
      final v = json['screenshots'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      screenshots = arr0;
    }
    if (json['similar_games'] != null) {
      final v = json['similar_games'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      similarGames = arr0;
    }
    slug = json['slug']?.toString();
    storyline = json['storyline']?.toString();
    summary = json['summary']?.toString();
    totalRating = json['total_rating']?.toDouble();
    totalRatingCount = json['total_rating_count']?.toInt();
    url = json['url']?.toString();
    if (json['videos'] != null) {
      final v = json['videos'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      videos = arr0;
    }
    if (json['websites'] != null) {
      final v = json['websites'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      websites = arr0;
    }
    checksum = json['checksum']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['aggregated_rating'] = aggregatedRating;
    if (artworks != null) {
      final v = artworks;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['artworks'] = arr0;
    }
    data['category'] = category;
    data['collection'] = collection;
    data['cover'] = cover;
    data['created_at'] = createdAt;
    data['first_release_date'] = firstReleaseDate;
    data['follows'] = follows;
    if (gameEngines != null) {
      final v = gameEngines;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['game_engines'] = arr0;
    }
    if (gameModes != null) {
      final v = gameModes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['game_modes'] = arr0;
    }
    if (genres != null) {
      final v = genres;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['genres'] = arr0;
    }
    if (involvedCompanies != null) {
      final v = involvedCompanies;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['involved_companies'] = arr0;
    }
    data['name'] = name;
    if (platforms != null) {
      final v = platforms;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['platforms'] = arr0;
    }
    if (playerPerspectives != null) {
      final v = playerPerspectives;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['player_perspectives'] = arr0;
    }
    data['rating'] = rating;
    data['rating_count'] = ratingCount;
    if (releaseDates != null) {
      final v = releaseDates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['release_dates'] = arr0;
    }
    if (screenshots != null) {
      final v = screenshots;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['screenshots'] = arr0;
    }
    if (similarGames != null) {
      final v = similarGames;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['similar_games'] = arr0;
    }
    data['slug'] = slug;
    data['storyline'] = storyline;
    data['summary'] = summary;
    data['total_rating'] = totalRating;
    data['total_rating_count'] = totalRatingCount;
    data['url'] = url;
    if (videos != null) {
      final v = videos;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v);
      }
      data['videos'] = arr0;
    }
    if (websites != null) {
      final v = websites;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['websites'] = arr0;
    }
    data['checksum'] = checksum;
    return data;
  }
}
